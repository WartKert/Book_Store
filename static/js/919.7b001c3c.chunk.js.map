{"version":3,"file":"static/js/919.7b001c3c.chunk.js","mappings":"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","sources":["app/components/circle.tsx","app/components/page7/P7_main.tsx","app/components/title.tsx","app/hooks.ts","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport React, { Fragment, PureComponent } from \"react\";\r\nimport { css, SerializedStyles } from \"@emotion/react\";\r\n\r\ntype CirclePropsType = {\r\n\tradius?: string;\r\n\tnumber: number;\r\n\tcss?: SerializedStyles;\r\n\tclassName?: string;\r\n};\r\n\r\nconst CircleStyle = css({});\r\n\r\nexport function Circle(props: CirclePropsType): JSX.Element {\r\n\tlet arr: string[] = [];\r\n\tfor (let i = 0; i < props.number; i++) {\r\n\t\tarr.push(\"\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div css={[CircleStyle, props.css]} className={props.className}>\r\n\t\t\t{arr.map((_, indx) => {\r\n\t\t\t\treturn <div key={`cirle${indx + 1}`} className={`circle${indx + 1}`} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { css } from \"@emotion/react\";\r\nimport * as constants from \"../constant\";\r\nimport Title from \"../title\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { fetchComments } from \"../../store\";\r\nimport { useEffect } from \"react\";\r\nimport { Circle } from \"../circle\";\r\n\r\nconst P7MainStyle = css({\r\n\theight: \"100%\",\r\n\tmaxHeight: \"1000px\",\r\n\tminWidth: `${constants.MIN_WIDTH}px`,\r\n\tmaxWidth: `${constants.MAX_WIDTH}px`,\r\n\tfontFamily: \"Cardo\",\r\n\tmargin: \"auto\",\r\n\tbackgroundColor: \"white\",\r\n\tdisplay: \"grid\",\r\n\tgridTemplate: \"1fr / 0.8fr 1fr\",\r\n\talignItems: \"center\",\r\n\r\n\t\"& > div:nth-of-type(odd)\": {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"start\",\r\n\t\tminWidth: \"250px\",\r\n\t},\r\n\t\"& > div:nth-of-type(odd) > *\": {\r\n\t\tmargin: \"5px 8%\",\r\n\t},\r\n\t\"& > div > div:nth-of-type(even)\": {\r\n\t\tcolor: \"#1B3764\",\r\n\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\t\"& > div > div:nth-of-type(even) > p\": {\r\n\t\tlineHeight: \"26px\",\r\n\t\tfontSize: \"large\",\r\n\t},\r\n\t\"& > div > p:nth-of-type(even)\": {\r\n\t\tlineHeight: \"28px\",\r\n\t\tfontFamily: \"Inter\",\r\n\t},\r\n\r\n\t\"& .circleBlock\": {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\t\"& .circleBlock > [class ^= circle]\": {\r\n\t\twidth: \"20px\",\r\n\t\theight: \"20px\",\r\n\t\tborderRadius: \"50%\",\r\n\t\tbackgroundColor: \"#FFCA42\",\r\n\t\tmargin: \"5px 5px\",\r\n\t\tborder: \"1px solid #FFCA42\",\r\n\t},\r\n\t\"& .circleBlock > [class ^= circle]:nth-of-type(5)\": {\r\n\t\tbackground: \"linear-gradient(270deg, rgb(255, 255, 255) 50%, rgb(255, 202, 66) 4%)\",\r\n\t},\r\n\r\n\t\"& > div > p:nth-of-type(1)\": {\r\n\t\tcolor: \"#969AA0\",\r\n\t\tfontFamily: \"Inter\",\r\n\t\tlineHeight: \"34px\",\r\n\t},\r\n\r\n\t\"& > div:nth-of-type(even)\": {\r\n\t\tmaxHeight: \"700px\",\r\n\t\tmaxWidth: \"640px\",\r\n\t\tdisplay: \"grid\",\r\n\t\tgridTemplate: \" 1fr 1fr / 1fr 1fr\",\r\n\t\tgridTemplateAreas: '\"A B\"\"C B\"',\r\n\t\tgridGap: \"30px 30px\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\r\n\t\"& > div:nth-of-type(even) > div\": {\r\n\t\tbackgroundColor: \"#1B3764\",\r\n\t\tmaxWidth: \"300px\",\r\n\t\tmaxHeight: \"400px\",\r\n\t},\r\n\r\n\t\"& > div:nth-of-type(even) > div:nth-of-type(1)\": {\r\n\t\tgridArea: \"A\",\r\n\t},\r\n\t\"& > div:nth-of-type(even) > div:nth-of-type(2)\": {\r\n\t\tgridArea: \"C\",\r\n\t},\r\n\t\"& > div:nth-of-type(even) > div:nth-of-type(3)\": {\r\n\t\tgridArea: \"B\",\r\n\t},\r\n});\r\n\r\nconst titleStyle = css({\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"column\",\r\n\talignItems: \"flex-start\",\r\n\tcolor: \"#1B3764\",\r\n\tfontSize: \"larger\",\r\n\t\"& .text\": {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tfontSize: \"x-large\",\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\t\"& .border\": {\r\n\t\twidth: \"50px\",\r\n\t\tborderTop: \"3px solid #FFCA42\",\r\n\t\tmargin: \"15px 0px\",\r\n\t},\r\n});\r\n\r\nexport default function Main(): JSX.Element {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst select = useAppSelector((state) => state.listCommentsReducer.listComments);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchComments(\"https://wartkert.github.io/json/book_store/comment.json\"));\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<div css={P7MainStyle}>\r\n\t\t\t<div>\r\n\t\t\t\t<Title css={titleStyle} classtextblock={\"text\"} classborderblock={\"border\"}>\r\n\t\t\t\t\tWords From Our Readers\r\n\t\t\t\t</Title>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tWe believe that boolstores are essential to a healthy culture. They're where authors can connect with readers, where we\r\n\t\t\t\t\tdiscover new writers, where children ger hooked on the thrill of reading that can last a lifetime.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Circle number={5} className={\"circleBlock\"} />\r\n\t\t\t\t\t<p>(4.8/5)</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>Overall Customer Ratings</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t{select ? (\r\n\t\t\t\t\ttypeof select === \"string\" ? (\r\n\t\t\t\t\t\t<p>Error loading</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tselect.map((elem, indx) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<BlockComment\r\n\t\t\t\t\t\t\t\t\tkey={elem.id}\r\n\t\t\t\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\t\t\t\timage: `https://wartkert.github.io/json/${elem.image}`,\r\n\t\t\t\t\t\t\t\t\t\tname: elem.name,\r\n\t\t\t\t\t\t\t\t\t\tevaluation: elem.evaluation,\r\n\t\t\t\t\t\t\t\t\t\ttext: elem.text,\r\n\t\t\t\t\t\t\t\t\t\tcomment: elem.comment,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>No loading!!!</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ntype BlockCommentPropsType = {\r\n\tdata: {\r\n\t\timage: string;\r\n\t\tname: string;\r\n\t\tevaluation: number;\r\n\t\ttext: string;\r\n\t\tcomment: string;\r\n\t};\r\n};\r\n\r\nconst BlockCommentStyle = css({\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"column\",\r\n\tpadding: \"10px\",\r\n\tfontFamily: \"Cardo\",\r\n\twidth: \"100%\",\r\n\talignItems: \"flex-start\",\r\n\r\n\t\"& div\": {\r\n\t\tdisplay: \"flex\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\t\"& div > div\": {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tmargin: \"5px 10px\",\r\n\t},\r\n\t\"& div > div > p\": {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tlineHeight: \"29px\",\r\n\t\tfontFamily: \"Cardo\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\t\"& div > div > .eval\": {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"row\",\r\n\t\tmargin: \"0px\",\r\n\t},\r\n\t\"& h3\": {\r\n\t\tlineHeight: \"33px\",\r\n\t\tcolor: \"white\",\r\n\t\tfontFamily: \"Cardo\",\r\n\t},\r\n\t\"& p\": {\r\n\t\tlineHeight: \"29px\",\r\n\t\tfontFamily: \"Inter\",\r\n\t\tcolor: \"#B4C7E7\",\r\n\t},\r\n});\r\n\r\nconst BlockCircleStyle = css({\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"row\",\r\n\r\n\t\"& [class ^= circle]\": {\r\n\t\twidth: \"20px\",\r\n\t\theight: \"20px\",\r\n\t\tborderRadius: \"50%\",\r\n\t\tbackgroundColor: \"#FFCA42\",\r\n\t\tmargin: \"5px 5px\",\r\n\t\tborder: \"1px solid #FFCA42\",\r\n\t},\r\n});\r\n\r\nfunction BlockComment(props: BlockCommentPropsType): JSX.Element {\r\n\treturn (\r\n\t\t<div css={BlockCommentStyle}>\r\n\t\t\t<div>\r\n\t\t\t\t<img src={props.data.image} alt={\"Image_back\"} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{props.data.name}</p>\r\n\t\t\t\t\t<Circle number={props.data.evaluation} className={\"eval\"} css={BlockCircleStyle} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<h3>{props.data.text}</h3>\r\n\t\t\t<p>{props.data.comment}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from \"react\";\r\nimport { SerializedStyles } from \"@emotion/react\";\r\n\r\ntype TitlePropsType = {\r\n\tcss?: SerializedStyles;\r\n\tclassName?: string;\r\n\tclasstextblock?: string;\r\n\tclassborderblock?: string;\r\n};\r\n\r\nexport default function Title(props: React.PropsWithChildren<TitlePropsType>): JSX.Element {\r\n\treturn (\r\n\t\t<div {...props} css={props.css}>\r\n\t\t\t<p className={props.classtextblock}>{props.children}</p>\r\n\t\t\t<div className={props.classborderblock} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport { createElement, useLayoutEffect, useContext, useRef, Fragment } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, u as useInsertionEffectMaybe } from './emotion-element-cbed451f.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, b as ThemeProvider, _ as __unsafe_useEmotionCache, a as useTheme, w as withEmotionCache, d as withTheme } from './emotion-element-cbed451f.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport 'hoist-non-react-statics';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.10.0\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": \"./macro.js\"\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.js\",\n\t\t\"macro.d.ts\",\n\t\t\"macro.js.flow\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.10.0\",\n\t\t\"@emotion/cache\": \"^11.10.0\",\n\t\t\"@emotion/serialize\": \"^1.1.0\",\n\t\t\"@emotion/utils\": \"^1.2.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.0\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\t\"@babel/core\": \"^7.0.0\",\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@babel/core\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@babel/core\": \"^7.18.5\",\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.10.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.0\",\n\t\t\"@emotion/server\": \"11.10.0\",\n\t\t\"@emotion/styled\": \"11.10.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": \"./macro.js\"\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useLayoutEffect;\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useInsertionEffect(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffect(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  var rules = useInsertionEffectMaybe(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      var res = insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n"],"names":["CircleStyle","Circle","props","arr","i","number","push","css","className","map","_","indx","P7MainStyle","height","maxHeight","minWidth","constants","maxWidth","fontFamily","margin","backgroundColor","display","gridTemplate","alignItems","flexDirection","color","lineHeight","fontSize","width","borderRadius","border","background","gridTemplateAreas","gridGap","gridArea","titleStyle","Main","dispatch","useAppDispatch","select","useAppSelector","state","listCommentsReducer","listComments","useEffect","fetchComments","classtextblock","classborderblock","elem","BlockComment","data","image","name","evaluation","text","comment","id","BlockCommentStyle","BlockCircleStyle","src","alt","Title","children","useDispatch","useSelector","React","useLayoutEffect","_len","arguments","length","args","Array","_key","serializeStyles"],"sourceRoot":""}