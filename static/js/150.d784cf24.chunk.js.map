{"version":3,"file":"static/js/150.d784cf24.chunk.js","mappings":"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","sources":["app/components/button.tsx","app/components/page2/P2_content.tsx","app/components/arrow.tsx","app/components/page2/P2_main.tsx","app/components/title.tsx","app/hooks.ts","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport React, { Fragment, PureComponent } from \"react\";\r\nimport { css, jsx, SerializedStyles } from \"@emotion/react\";\r\n\r\ntype ButtonPropsType = {\r\n\tcss?: SerializedStyles;\r\n\tclassName?: string;\r\n};\r\n\r\nexport default function Button(props: React.PropsWithChildren<ButtonPropsType>): JSX.Element {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<button {...props}>{props.children}</button>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from \"react\";\r\nimport { css } from \"@emotion/react\";\r\n\r\ntype ContentMainPropsType = {\r\n\tchildren?: React.ReactNode;\r\n};\r\n\r\nconst style = css({\r\n\tdisplay: \"flex\",\r\n\tflexWrap: \"nowrap\",\r\n\tflex: \"1 0 auto\",\r\n\twidth: \"83%\",\r\n\tmaxWidth: \"1250px\",\r\n\theight: \"100%\",\r\n\tjustifyContent: \"space-arpund\",\r\n\talignContent: \"center\",\r\n});\r\n\r\nexport default function ContentMain(props: React.PropsWithChildren<ContentMainPropsType>): JSX.Element {\r\n\treturn <div css={style}>{props.children}</div>;\r\n}\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { ClassNames, css, SerializedStyles } from \"@emotion/react\";\r\n\r\ntype ArrowPropsType = {\r\n\tclassName?: string;\r\n\tcssStyle?: SerializedStyles;\r\n};\r\n\r\nexport const Arrow: React.FC<React.PropsWithChildren<ArrowPropsType>> = (props): JSX.Element => {\r\n\treturn <div {...props}>{props.children}</div>;\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport arrow_back_96px from \"../../../image/arrow_back_96px.png\";\r\nimport arrow_forward_96px from \"../../../image/arrow_forward_96px.png\";\r\nimport ContentMain from \"./P2_content\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { fetchBooks, ListBooksItemsType } from \"../../store\";\r\nimport Button from \"../button\";\r\nimport { Arrow } from \"../arrow\";\r\nimport Title from \"../title\";\r\nimport * as constants from \"../constant\";\r\n\r\nconst divMainStyle = css({\r\n\theight: \"100%\",\r\n\tmaxHeight: \"700px\",\r\n\tminWidth: `${constants.MIN_WIDTH}px`,\r\n\tmaxWidth: `${constants.MAX_WIDTH}px`,\r\n\tbackgroundColor: \"white\",\r\n\tdisplay: \"grid\",\r\n\tgridTemplate: \"150px auto / 1fr\",\r\n\tmargin: \"auto\",\r\n\tjustifyItems: \"center\",\r\n\tposition: \"relative\",\r\n\r\n\t\"& .arrowBlock\": {\r\n\t\tposition: \"absolute\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\twidth: \"100%\",\r\n\t\ttop: \"50%\",\r\n\t\tzIndex: \"1\",\r\n\t},\r\n});\r\n\r\nconst titleStyle = css({\r\n\tpaddingTop: \"20px\",\r\n\tcolor: \"#1B3764\",\r\n\tfontSize: \"larger\",\r\n\t\"& .text\": {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tfontSize: \"x-large\",\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\t\"& .border\": {\r\n\t\twidth: \"50px\",\r\n\t\tborderTop: \"3px solid #FFCA42\",\r\n\t\tmargin: \"15px auto\",\r\n\t},\r\n\t\"& .image\": {\r\n\t\tgridArea: \"C\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tobjectFit: \"contain\",\r\n\t},\r\n});\r\n\r\nexport default function Main(): JSX.Element {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst select = useAppSelector((state) => state.listBookReducer.listBooks);\r\n\tconst [curBlockElements] = useState({ left: 0, right: 1 });\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchBooks(\"https://wartkert.github.io/json/book_store/catalog.json\"));\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<div css={divMainStyle}>\r\n\t\t\t<Title css={titleStyle} classtextblock={\"text\"} classborderblock={\"border\"}>\r\n\t\t\t\tThe Author's Book\r\n\t\t\t</Title>\r\n\t\t\t<div className={\"arrowBlock\"}>\r\n\t\t\t\t<Arrow className={\"arrow\"}>\r\n\t\t\t\t\t<img src={arrow_back_96px} alt={\"Arrow_back\"} />\r\n\t\t\t\t</Arrow>\r\n\t\t\t\t<Arrow>\r\n\t\t\t\t\t<img src={arrow_forward_96px} alt={\"Arrow_forward\"} />\r\n\t\t\t\t</Arrow>\r\n\t\t\t</div>\r\n\t\t\t<ContentMain>\r\n\t\t\t\t{select ? (\r\n\t\t\t\t\ttypeof select === \"string\" ? (\r\n\t\t\t\t\t\t<p>Error loading</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tselect.map((elem, indx) => {\r\n\t\t\t\t\t\t\tif (indx === curBlockElements.left || indx === curBlockElements.right) {\r\n\t\t\t\t\t\t\t\treturn <BlockItem list={elem} key={elem.id} />;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>No loading</p>\r\n\t\t\t\t)}\r\n\t\t\t</ContentMain>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst BlockItemStyle = css({\r\n\tbackgroundColor: \"white\",\r\n\theight: \"100%\",\r\n\tdisplay: \"grid\",\r\n\tgridTemplate: \"repeat(5, auto)/ 1fr 40%\",\r\n\tgridTemplateAreas: '\"A B\"\"A C\"\"A D\"\"A E\"\"A F\"',\r\n\tmargin: \"auto\",\r\n\talignItems: \"center\",\r\n\tjustifyItems: \"center\",\r\n\tposition: \"relative\",\r\n\talignContent: \"center\",\r\n\tfontFamily: \"Cardo\",\r\n\r\n\t\"& .all\": {\r\n\t\tjustifySelf: \"left\",\r\n\t},\r\n\r\n\t\"&>img\": {\r\n\t\tgridArea: \"A\",\r\n\r\n\t\twidth: \"100%\",\r\n\t},\r\n\t\"& .textBlock\": {\r\n\t\tgridArea: \"A\",\r\n\t},\r\n\r\n\t\"&> .title\": {\r\n\t\tgridArea: \"B\",\r\n\t\tletterSpacing: \"0.4px\",\r\n\t\tlineHeight: \"38px\",\r\n\t},\r\n\t\"&> .price\": { gridArea: \"C\", color: \"#FFCA42\", fontFamily: \"Inter\", lineHeight: \"32px\", fontSize: \"large\" },\r\n\t\"&> .price::before\": { content: \"'$ '\" },\r\n\t\"&> .statement\": { gridArea: \"D\", fontFamily: \"Inter\", color: \"#969AA0\", lineHeight: \"28px\" },\r\n\t\"&> div\": { gridArea: \"E\", display: \"flex\", justifyItems: \"flex-start\" },\r\n\t\"&> div > .circle\": { width: \"15px\", height: \"15px\", borderRadius: \"50%\", backgroundColor: \"#FFCA42\", margin: \"5px\" },\r\n\t\"&> div> .printText\": { fontSize: \"large\" },\r\n\t\"&> .button\": {\r\n\t\tgridArea: \"F\",\r\n\t\tfontSize: \"large\",\r\n\t\tfontFamily: \"Cardo\",\r\n\t\tminWidth: \"130px\",\r\n\t\twidth: \"100%\",\r\n\t\tmaxWidth: \"200px\",\r\n\t\theight: \"60px\",\r\n\t\tborder: \"1px solid #FFCA42\",\r\n\t\tbackgroundColor: \"white\",\r\n\t},\r\n});\r\n\r\ntype BlockItemProps = {\r\n\tlist: ListBooksItemsType;\r\n};\r\n\r\nconst BlockItem: React.FC<React.PropsWithChildren<BlockItemProps>> = (props) => {\r\n\treturn (\r\n\t\t<div css={BlockItemStyle}>\r\n\t\t\t<img src={`https://wartkert.github.io/json/${props.list.image}`} alt={\"Image_book\"} />\r\n\t\t\t<h1 className={\"title all\"}>{props.list.title}</h1>\r\n\t\t\t<p className={\"price all\"}>{`${props.list.regular_price.value} ${props.list.regular_price.currency}`}</p>\r\n\t\t\t<p className={\"statement  all\"}>{props.list.statement}</p>\r\n\t\t\t<div className={\"all\"}>\r\n\t\t\t\t<div className={\"circle\"} />\r\n\t\t\t\t<p className={\"printText\"}>Printed Book</p>\r\n\t\t\t</div>\r\n\t\t\t<Button className={\"button all\"}>Order Now</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from \"react\";\r\nimport { SerializedStyles } from \"@emotion/react\";\r\n\r\ntype TitlePropsType = {\r\n\tcss?: SerializedStyles;\r\n\tclassName?: string;\r\n\tclasstextblock?: string;\r\n\tclassborderblock?: string;\r\n};\r\n\r\nexport default function Title(props: React.PropsWithChildren<TitlePropsType>): JSX.Element {\r\n\treturn (\r\n\t\t<div {...props} css={props.css}>\r\n\t\t\t<p className={props.classtextblock}>{props.children}</p>\r\n\t\t\t<div className={props.classborderblock} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport { createElement, useLayoutEffect, useContext, useRef, Fragment } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, u as useInsertionEffectMaybe } from './emotion-element-cbed451f.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, b as ThemeProvider, _ as __unsafe_useEmotionCache, a as useTheme, w as withEmotionCache, d as withTheme } from './emotion-element-cbed451f.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport 'hoist-non-react-statics';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.10.0\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": \"./macro.js\"\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.js\",\n\t\t\"macro.d.ts\",\n\t\t\"macro.js.flow\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.10.0\",\n\t\t\"@emotion/cache\": \"^11.10.0\",\n\t\t\"@emotion/serialize\": \"^1.1.0\",\n\t\t\"@emotion/utils\": \"^1.2.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.0\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\t\"@babel/core\": \"^7.0.0\",\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@babel/core\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@babel/core\": \"^7.18.5\",\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.10.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.0\",\n\t\t\"@emotion/server\": \"11.10.0\",\n\t\t\"@emotion/styled\": \"11.10.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": \"./macro.js\"\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useLayoutEffect;\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useInsertionEffect(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffect(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  var rules = useInsertionEffectMaybe(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      var res = insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n"],"names":["Button","props","Fragment","children","style","ContentMain","css","Arrow","divMainStyle","height","maxHeight","minWidth","constants","maxWidth","backgroundColor","display","gridTemplate","margin","justifyItems","position","justifyContent","width","top","zIndex","titleStyle","Main","dispatch","useAppDispatch","select","useAppSelector","state","listBookReducer","listBooks","useState","left","right","curBlockElements","useEffect","fetchBooks","classtextblock","classborderblock","className","src","alt","map","elem","indx","BlockItem","list","id","BlockItemStyle","image","title","regular_price","value","currency","statement","Title","useDispatch","useSelector","React","useLayoutEffect","_len","arguments","length","args","Array","_key","serializeStyles"],"sourceRoot":""}